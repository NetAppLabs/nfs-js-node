/* tslint:disable */
/* eslint-disable */

/* auto-generated by NAPI-RS */

export const enum JsNfsHandleKind {
  file = 0,
  directory = 1
}
export const enum JsNfsHandlePermissionMode {
  read = 0,
  readwrite = 1
}
export class JsNfsPermissionDescriptor {
  mode: JsNfsHandlePermissionMode
  static withInitialMode(mode: JsNfsHandlePermissionMode): JsNfsPermissionDescriptor
}
export class JsNfsGetDirectoryOptions {
  create?: boolean
  static withInitialCreate(create: boolean): JsNfsGetDirectoryOptions
  constructor()
}
export class JsNfsGetFileOptions {
  create?: boolean
  static withInitialCreate(create: boolean): JsNfsGetFileOptions
  constructor()
}
export class JsNfsHandle {
  kind: JsNfsHandleKind
  name: string
  static withInitialValues(kind: JsNfsHandleKind, name: string): JsNfsHandle
  constructor()
  /** Class method */
  isSameEntry(other: JsNfsHandle): boolean
}
export class JsNfsDirectoryHandle {
  kind: JsNfsHandleKind
  name: string
  static withInitialName(name: string): JsNfsDirectoryHandle
  constructor()
  /** Class method */
  entries(): Promise<Record<string, string>>
  keys(): Promise<Array<string>>
  values(): Promise<Array<string>>
  getDirectoryHandle(name: string): Promise<JsNfsDirectoryHandle>
  getFileHandle(name: string): Promise<JsNfsFileHandle>
  removeEntry(name: string): Promise<void>
}
export class JsNfsFileHandle {
  kind: JsNfsHandleKind
  name: string
  static withInitialName(name: string): JsNfsFileHandle
  constructor()
  /** Class method */
  getFile(): Promise<JsNfsFile>
}
export class JsNfsFile {
  size: number
  type: string
  lastModified: number
  name: string
  webkitRelativePath: string
  /** Class method */
  slice(start?: number | undefined | null, end?: number | undefined | null, contentType?: string | undefined | null): JsNfsBlob
  text(): Promise<string>
}
export class JsNfsBlob {
  size: number
  type: string
  /** Class method */
  slice(start?: number | undefined | null, end?: number | undefined | null, contentType?: string | undefined | null): JsNfsBlob
  text(): Promise<string>
}
