/* tslint:disable */
/* eslint-disable */

/* auto-generated by NAPI-RS */

export class ArrayBuffer { }
export class AsyncIterableIterator {
  next(): Promise<void>
}
export class ReadableStream {
  locked: boolean
}
export class JsNfsWritableFileStream {
  locked: boolean
  write(data: undefined): Promise<void>
  close(): Promise<void>
}
export class JsNfsHandlePermissionDescriptor {
  mode: string
}
export class JsNfsGetDirectoryOptions {
  create?: boolean
}
export class JsNfsGetFileOptions {
  create?: boolean
}
export class JsNfsRemoveOptions {
  recursive?: boolean
}
export class JsNfsCreateWritableOptions {
  keepExistingData?: boolean
}
export class JsNfsHandle {
  kind: string
  name: string
  /** Class method */
  isSameEntry(other: JsNfsHandle): boolean
  queryPermission(perm: JsNfsHandlePermissionDescriptor): Promise<string>
  requestPermission(perm: JsNfsHandlePermissionDescriptor): Promise<string>
}
export class JsNfsDirectoryHandle {
  kind: string
  name: string
  constructor(url: string)
  /** Class method */
  isSameEntry(other: JsNfsHandle): boolean
  queryPermission(perm: JsNfsHandlePermissionDescriptor): Promise<string>
  requestPermission(perm: JsNfsHandlePermissionDescriptor): Promise<string>
  entries(): AsyncIterableIterator
  keys(): AsyncIterableIterator
  values(): AsyncIterableIterator
  getDirectoryHandle(name: string, options?: JsNfsGetDirectoryOptions | undefined | null): Promise<JsNfsDirectoryHandle>
  getFileHandle(name: string, options?: JsNfsGetFileOptions | undefined | null): Promise<JsNfsFileHandle>
  removeEntry(name: string, options?: JsNfsRemoveOptions | undefined | null): Promise<void>
  resolve(possibleDescendant: JsNfsHandle): Promise<Array<string>>
}
export class JsNfsFileHandle {
  kind: string
  name: string
  /** Class method */
  isSameEntry(other: JsNfsHandle): boolean
  queryPermission(perm: JsNfsHandlePermissionDescriptor): Promise<string>
  requestPermission(perm: JsNfsHandlePermissionDescriptor): Promise<string>
  getFile(): Promise<JsNfsFile>
  createWritable(options?: JsNfsCreateWritableOptions | undefined | null): Promise<JsNfsWritableFileStream>
}
export class JsNfsFile {
  size: number
  type: string
  lastModified: number
  name: string
  webkitRelativePath: string
  /** Class method */
  arrayBuffer(): Promise<ArrayBuffer>
  slice(start?: number | undefined | null, end?: number | undefined | null, contentType?: string | undefined | null): JsNfsBlob
  stream(): ReadableStream
  text(): Promise<string>
}
export class JsNfsBlob {
  size: number
  type: string
  /** Class method */
  arrayBuffer(): Promise<ArrayBuffer>
  slice(start?: number | undefined | null, end?: number | undefined | null, contentType?: string | undefined | null): JsNfsBlob
  stream(): ReadableStream
  text(): Promise<string>
}
